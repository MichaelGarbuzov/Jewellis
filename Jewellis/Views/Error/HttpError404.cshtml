@{
    ViewData["Title"] = "Page Not Found";
}

<section class="triangle-hero-container">
    <div class="triangle-hero">
        <canvas id="hero-canvas" width="1920" height="600"></canvas>
    </div>
    <div class="sec-container triangle-hero-content">
        <div class="container p-5">
            <div class="row">
                <div class="col-xl-2">
                    <div class="horizontal-line d-none d-xl-block"></div>
                </div>
                <div class="col-xl-10">
                    <h3 class="txt-accent text-uppercase mb-3">Error</h3>
                    <h1 class="title-1 font-weight-bold mb-5">Page Not Found</h1>
                    <p class="paragraph-1">The link you followed may be broken, or the page may have been removed.</p>
                </div>
            </div>
        </div>
    </div>
</section>

@section Scripts {
    <script>
        // Pure javascrip random function:
        function random(min, max) {
            return Math.random() * (max - min) + min;
        }

        function draw() {
            // Triangle colors:
            var color1 = "rgba(111,111,111,0.3)";
            var color2 = "rgba(105,105,105,0.25)";

            // Setups canvas enviroment:
            var time = new Date().getTime() * 0.002;
            var canvas = document.getElementById("hero-canvas");
            var ctx = canvas.getContext("2d");
            ctx.clearRect(0, 0, canvas.width, canvas.height);
            ctx.save();

            // random float to be used in the sin & cos
            var randomX = random(.2, .9);
            var randomY = random(.1, .2);

            // sin & cos for the movement of the triangles in the canvas
            var rectX = Math.cos(time * 1) * 1.5 + randomX;
            var rectY = Math.sin(time * 1) * 1.5 + randomY;
            var rectX2 = Math.cos(time * .7) * 3 + randomX;
            var rectY2 = Math.sin(time * .7) * 3 + randomY;
            var rectX3 = Math.cos(time * 1.4) * 4 + randomX;
            var rectY3 = Math.sin(time * 1.4) * 4 + randomY;

            // Triangle gradient:
            var triangle_gradient = ctx.createLinearGradient(0, 0, canvas.width, canvas.height);
            triangle_gradient.addColorStop(0, color1);
            triangle_gradient.addColorStop(1, color2);

            // Triangle group - left:
            // Triangle 1.1:
            ctx.beginPath();
            ctx.moveTo(rectX2 + 120, rectY2 - 100);
            ctx.lineTo(rectX2 + 460, rectY2 + 80);
            ctx.lineTo(rectX2 + 26, rectY2 + 185);
            ctx.fillStyle = triangle_gradient;
            ctx.fill();
            // Triangle 1.2:
            ctx.beginPath();
            ctx.moveTo(rectX - 50, rectY - 25);
            ctx.lineTo(rectX + 270, rectY + 25);
            ctx.lineTo(rectX - 50, rectY + 195);
            ctx.fillStyle = triangle_gradient;
            ctx.fill();
            // Triangle 1.3:
            ctx.beginPath();
            ctx.moveTo(rectX3 - 140, rectY3 - 150);
            ctx.lineTo(rectX3 + 180, rectY3 + 210);
            ctx.lineTo(rectX3 - 225, rectY3 - 50);
            ctx.fillStyle = triangle_gradient;
            ctx.fill();

            // Triangle group - right:
            // Triangle 2.1:
            ctx.beginPath();
            ctx.moveTo(rectX + (canvas.width - 40), rectY - 30);
            ctx.lineTo(rectX + (canvas.width + 40), rectY + 190);
            ctx.lineTo(rectX + (canvas.width - 450), rectY + 120);
            ctx.fillStyle = triangle_gradient;
            ctx.fill();
            // Triangle 2.2:
            ctx.beginPath();
            ctx.moveTo(rectX3 + (canvas.width - 200), rectY3 - 240);
            ctx.lineTo(rectX3 + (canvas.width + 80), rectY3 - 240);
            ctx.lineTo(rectX3 + (canvas.width - 50), rectY3 + 460);
            ctx.fillStyle = triangle_gradient;
            ctx.fill();
            // Triangle 2.3:
            ctx.beginPath();
            ctx.moveTo(rectX2 + (canvas.width - 400), rectY2 + 140);
            ctx.lineTo(rectX2 + (canvas.width + 20), rectY2 + 200);
            ctx.lineTo(rectX2 + (canvas.width - 350), rectY2 + 370);
            ctx.fillStyle = triangle_gradient;
            ctx.fill();

            ctx.restore();

        }

        window.requestAnimFrame = (function () {
            return window.requestAnimationFrame ||
                function (callback, element) {
                    window.setTimeout(callback, 1000 / 60);
                };
        })();

        function animate() {
            requestAnimFrame(animate);
            draw();
        }

        animate();
    </script>
}
